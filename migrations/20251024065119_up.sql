-- Add migration script here
-- Enable pgcrypto for gen_random_uuid()
CREATE EXTENSION IF NOT EXISTS "pgcrypto";

CREATE TYPE employment_status AS ENUM (
	'Full-time',
	'Part-time',
	'Contractor',
	'Temporary',
	'Intern'
);

CREATE TYPE session_type AS ENUM (
    'Active',
    'Inactive'
);


-- Master tables
CREATE TABLE tbl_department (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY (START 1000) PRIMARY KEY,
    department_id UUID NOT NULL DEFAULT gen_random_uuid(),
    name TEXT NOT NULL UNIQUE,
    description TEXT,

    -- Timestamps
    cid BIGINT NOT NULL,
    ctime TIMESTAMP WITH TIME ZONE NOT NULL,
    mid BIGINT NOT NULL,
    mtime TIMESTAMP WITH TIME ZONE NOT NULL
);

CREATE TABLE tbl_salary_grade (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY (START 1000) PRIMARY KEY,
    salary_grade_id UUID NOT NULL DEFAULT gen_random_uuid(),
    level TEXT NOT NULL UNIQUE,
    base_salary NUMERIC(12,2) NOT NULL CHECK (base_salary >= 0),

    -- Timestamps
    cid BIGINT NOT NULL,
    ctime TIMESTAMP WITH TIME ZONE NOT NULL,
    mid BIGINT NOT NULL,
    mtime TIMESTAMP WITH TIME ZONE NOT NULL
);

CREATE TABLE tbl_job_position (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY (START 1000) PRIMARY KEY,
    job_position_id UUID NOT NULL DEFAULT gen_random_uuid(),
    title TEXT NOT NULL UNIQUE,
    department_id BIGINT NOT NULL REFERENCES tbl_department(id) ON UPDATE CASCADE,
    salary_grade_id BIGINT NOT NULL REFERENCES tbl_salary_grade(id) ON UPDATE CASCADE,
    description TEXT,

    -- Timestamps
    cid BIGINT NOT NULL,
    ctime TIMESTAMP WITH TIME ZONE NOT NULL,
    mid BIGINT NOT NULL,
    mtime TIMESTAMP WITH TIME ZONE NOT NULL
);

-- Address (1:1)
CREATE TABLE tbl_address (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY (START 1000) PRIMARY KEY,
    address_id UUID NOT NULL DEFAULT gen_random_uuid(),
    building_number TEXT,
    street_name TEXT,
    barangay TEXT,
    city TEXT,
    municipality TEXT,
    province TEXT,

    -- Timestamps
    cid BIGINT NOT NULL,
    ctime TIMESTAMP WITH TIME ZONE NOT NULL,
    mid BIGINT NOT NULL,
    mtime TIMESTAMP WITH TIME ZONE NOT NULL
);

-- Employee
CREATE TABLE tbl_employee (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY (START 1000) PRIMARY KEY,
    employee_id UUID NOT NULL DEFAULT gen_random_uuid(),
    firstname TEXT NOT NULL,
    middlename TEXT,
    lastname TEXT NOT NULL,
    hire_date DATE NOT NULL,
    status TEXT NOT NULL DEFAULT 'Active',
    supervisor_id BIGINT REFERENCES tbl_employee(id) ON DELETE SET NULL ON UPDATE CASCADE,
    address_id BIGINT UNIQUE REFERENCES tbl_address(id) ON DELETE SET NULL,
    department_id BIGINT REFERENCES tbl_department(id) ON DELETE SET NULL,
    job_position_id BIGINT REFERENCES tbl_job_position(id) ON DELETE SET NULL,

    -- Timestamps
    cid BIGINT NOT NULL,
    ctime TIMESTAMP WITH TIME ZONE NOT NULL,
    mid BIGINT NOT NULL,
    mtime TIMESTAMP WITH TIME ZONE NOT NULL
);

-- Time & Attendance
CREATE TABLE tbl_time_log (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY (START 1000) PRIMARY KEY,
    time_log_id UUID NOT NULL DEFAULT gen_random_uuid(),
    employee_id BIGINT NOT NULL REFERENCES tbl_employee(id) ON DELETE CASCADE,
    check_in TIMESTAMP NOT NULL,
    check_out TIMESTAMP,
    notes TEXT,
    CHECK (check_out IS NULL OR check_out >= check_in),
    
    -- Timestamps
    cid BIGINT NOT NULL,
    ctime TIMESTAMP WITH TIME ZONE NOT NULL,
    mid BIGINT NOT NULL,
    mtime TIMESTAMP WITH TIME ZONE NOT NULL
);

CREATE TABLE tbl_attendance_record (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY (START 1000) PRIMARY KEY,
    attendance_record_id UUID NOT NULL DEFAULT gen_random_uuid(),
    employee_id BIGINT NOT NULL REFERENCES tbl_employee(id) ON DELETE CASCADE,
    date DATE NOT NULL,
    status TEXT NOT NULL,
    
    -- Timestamps
    cid BIGINT NOT NULL,
    ctime TIMESTAMP WITH TIME ZONE NOT NULL,
    mid BIGINT NOT NULL,
    mtime TIMESTAMP WITH TIME ZONE NOT NULL
);

-- Leave
CREATE TABLE tbl_leave_type (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY (START 1000) PRIMARY KEY,
    leave_type_id UUID NOT NULL DEFAULT gen_random_uuid(),
    name TEXT NOT NULL UNIQUE,
    max_days INT CHECK (max_days >= 0),
    is_paid BOOLEAN DEFAULT TRUE,
    
    -- Timestamps
    cid BIGINT NOT NULL,
    ctime TIMESTAMP WITH TIME ZONE NOT NULL,
    mid BIGINT NOT NULL,
    mtime TIMESTAMP WITH TIME ZONE NOT NULL
);

CREATE TABLE tbl_leave_balance (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY (START 1000) PRIMARY KEY,
    employee_id BIGINT NOT NULL REFERENCES tbl_employee(id) ON DELETE CASCADE,
    leave_type_id BIGINT NOT NULL REFERENCES tbl_leave_type(id) ON DELETE CASCADE,
    balance_days INT NOT NULL CHECK (balance_days >= 0),
    
    -- Timestamps
    cid BIGINT NOT NULL,
    ctime TIMESTAMP WITH TIME ZONE NOT NULL,
    mid BIGINT NOT NULL,
    mtime TIMESTAMP WITH TIME ZONE NOT NULL,
    UNIQUE(employee_id, leave_type_id)
);

CREATE TABLE tbl_leave_request (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY (START 1000) PRIMARY KEY,
    employee_id BIGINT NOT NULL REFERENCES tbl_employee(id) ON DELETE CASCADE,
    leave_type_id BIGINT NOT NULL REFERENCES tbl_leave_type(id),
    start_date DATE NOT NULL,
    end_date DATE NOT NULL,
    reason TEXT,
    status TEXT NOT NULL DEFAULT 'Pending',
    created_at TIMESTAMP DEFAULT NOW(),
    updated_at TIMESTAMP DEFAULT NOW(),
    
    -- Timestamps
    cid BIGINT NOT NULL,
    ctime TIMESTAMP WITH TIME ZONE NOT NULL,
    mid BIGINT NOT NULL,
    mtime TIMESTAMP WITH TIME ZONE NOT NULL,
    CHECK (end_date >= start_date)
);

-- Payroll
CREATE TABLE tbl_earning (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY (START 1000) PRIMARY KEY,
    earning_id UUID NOT NULL DEFAULT gen_random_uuid(),
    name TEXT NOT NULL,
    amount NUMERIC(12,2) NOT NULL CHECK (amount >= 0),
    taxable BOOLEAN DEFAULT TRUE,
    
    -- Timestamps
    cid BIGINT NOT NULL,
    ctime TIMESTAMP WITH TIME ZONE NOT NULL,
    mid BIGINT NOT NULL,
    mtime TIMESTAMP WITH TIME ZONE NOT NULL
);

CREATE TABLE tbl_deduction (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY (START 1000) PRIMARY KEY,
    deduction_id UUID NOT NULL DEFAULT gen_random_uuid(),
    name TEXT NOT NULL,
    amount NUMERIC(12,2) CHECK (amount >= 0),
    percentage NUMERIC(5,2) CHECK (percentage >= 0),
    
    -- Timestamps
    cid BIGINT NOT NULL,
    ctime TIMESTAMP WITH TIME ZONE NOT NULL,
    mid BIGINT NOT NULL,
    mtime TIMESTAMP WITH TIME ZONE NOT NULL
);

CREATE TABLE tbl_kpi (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY (START 1000) PRIMARY KEY,
    kpi_id UUID NOT NULL DEFAULT gen_random_uuid(),
    name TEXT NOT NULL,
    weight INT CHECK (weight >= 0),
    
    -- Timestamps
    cid BIGINT NOT NULL,
    ctime TIMESTAMP WITH TIME ZONE NOT NULL,
    mid BIGINT NOT NULL,
    mtime TIMESTAMP WITH TIME ZONE NOT NULL
);

CREATE TABLE tbl_payroll (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY (START 1000) PRIMARY KEY,
    employee_id BIGINT NOT NULL REFERENCES tbl_employee(id) ON DELETE CASCADE,
    start_period DATE NOT NULL,
    end_period DATE NOT NULL,
    gross_pay NUMERIC(12,2) NOT NULL CHECK (gross_pay >= 0),
    total_deductions NUMERIC(12,2) CHECK (total_deductions >= 0) DEFAULT 0,
    net_pay NUMERIC(12,2) NOT NULL CHECK (net_pay >= 0),
    date_processed TIMESTAMP DEFAULT NOW(),
    
    -- Timestamps
    cid BIGINT NOT NULL,
    ctime TIMESTAMP WITH TIME ZONE NOT NULL,
    mid BIGINT NOT NULL,
    mtime TIMESTAMP WITH TIME ZONE NOT NULL,
    CHECK (end_period >= start_period)
);

CREATE TABLE tbl_performance_review (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY (START 1000) PRIMARY KEY,
    employee_id BIGINT NOT NULL REFERENCES tbl_employee(id),
    date_evaluated DATE NOT NULL,
    score INT CHECK (score BETWEEN 0 AND 100),
    remarks TEXT,
    status TEXT,
    
    -- Timestamps
    cid BIGINT NOT NULL,
    ctime TIMESTAMP WITH TIME ZONE NOT NULL,
    mid BIGINT NOT NULL,
    mtime TIMESTAMP WITH TIME ZONE NOT NULL
);

-- Auth & RBAC
CREATE TABLE tbl_user_account (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY (START 1000) PRIMARY KEY,
    user_id UUID NOT NULL DEFAULT gen_random_uuid(),
    employee_id BIGINT REFERENCES tbl_employee(id) ON DELETE SET NULL,
    username VARCHAR(128) UNIQUE NOT NULL,
    password_hash VARCHAR(128),
    pass_salt UUID NOT NULL DEFAULT gen_random_uuid(),
    token_salt UUID NOT NULL DEFAULT gen_random_uuid(),
    status TEXT DEFAULT 'Active',

    -- Timestamps
    cid BIGINT NOT NULL,
    ctime TIMESTAMP WITH TIME ZONE NOT NULL,
    mid BIGINT NOT NULL,
    mtime TIMESTAMP WITH TIME ZONE NOT NULL
);

CREATE TABLE tbl_role (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY (START 1000) PRIMARY KEY,
    name TEXT NOT NULL UNIQUE,
    description TEXT,
    
    -- Timestamps
    cid BIGINT NOT NULL,
    ctime TIMESTAMP WITH TIME ZONE NOT NULL
);

CREATE TABLE tbl_permission (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY (START 1000) PRIMARY KEY,
    module TEXT NOT NULL,
    action TEXT NOT NULL,
    level TEXT,

    -- Timestamps
    cid BIGINT NOT NULL,
    ctime TIMESTAMP WITH TIME ZONE NOT NULL
);

CREATE TABLE tbl_user_role (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY (START 1000) PRIMARY KEY,
    user_id BIGINT REFERENCES tbl_user_account(id) ON DELETE CASCADE,
    role_id BIGINT REFERENCES tbl_role(id) ON DELETE CASCADE,

    -- Timestamps
    cid BIGINT NOT NULL,
    ctime TIMESTAMP WITH TIME ZONE NOT NULL,
    mid BIGINT NOT NULL,
    mtime TIMESTAMP WITH TIME ZONE NOT NULL,
    UNIQUE(user_id, role_id)
);

CREATE TABLE tbl_role_permission (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY (START 1000) PRIMARY KEY,
    role_id BIGINT REFERENCES tbl_role(id) ON DELETE CASCADE,
    permission_id BIGINT REFERENCES tbl_permission(id) ON DELETE CASCADE,

    -- Timestamps
    cid BIGINT NOT NULL,
    ctime TIMESTAMP WITH TIME ZONE NOT NULL,
    mid BIGINT NOT NULL,
    mtime TIMESTAMP WITH TIME ZONE NOT NULL,
    UNIQUE(role_id, permission_id)
);

-- Audit Log
CREATE TABLE tbl_audit_log (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY (START 1000) PRIMARY KEY,
    actor_id BIGINT REFERENCES tbl_user_account(id),
    action TEXT NOT NULL,
    target_table TEXT NOT NULL,
    target_id BIGINT,
    changes JSONB,

    -- Timestamps
    cid BIGINT NOT NULL,
    ctime TIMESTAMP WITH TIME ZONE NOT NULL,
    mid BIGINT NOT NULL,
    mtime TIMESTAMP WITH TIME ZONE NOT NULL
);

-- Indexes
CREATE INDEX idx_employee_department ON tbl_employee(department_id);
CREATE INDEX idx_employee_supervisor ON tbl_employee(supervisor_id);
CREATE INDEX idx_payroll_employee ON tbl_payroll(employee_id);
CREATE INDEX idx_attendance_employee ON tbl_attendance_record(employee_id);
CREATE INDEX idx_leave_balance_employee ON tbl_leave_balance(employee_id);
