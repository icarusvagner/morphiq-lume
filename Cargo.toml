[package]
name = "morphiq-lume"
version = "0.1.0"
edition = "2024"                                                                                 # ensure your CI/toolchain supports Rust edition 2024
description = "Transforming Human Resource Operations with Clarity, Precision, and Intelligence"
authors = ["Descartin Lance Phillip <cnale1211435@gmail.com>"]
readme = "README.md"
homepage = "https://morphiqlume.com"
repository = "https://github.com/icarusvagner/morphiq-lume"                                      # fixed typo
documentation = "https://github.com/icarusvagner/morphiq-lume/wiki"
license = "MIT OR Apache-2.0"
keywords = ["gui", "hrmo", "desktop"]

# Files to include when packaging (no leading slashes)
include = [
	"src/**/*.rs",
	"assets/fonts/Raleway/*.ttf",
	"assets/fonts/Orbitron/*.ttf",
	"assets/logos/icons/full/icon.png",
	"assets/logos/icons/raw/icon.png",
	"assets/fonts/icons/font/*.ttf",
]

# NOTE: Cargo itself doesn't understand [lints.*] ‚Äî if these are for a custom tool or CI, keep them
# but document which tool reads them (cargo-deny, custom linter, etc).
[lints.rust]
unsafe_code = { level = "forbid", priority = 5 }
dead_code = { level = "allow", priority = 5 }

# [lints.clippy]
# all = { level = "warn", priority = 4 }
# pedantic = { level = "warn", priority = 4 }
# nursery = { level = "warn", priority = 4 }
# unwrap_used = { level = "forbid", priority = 5 }

[lints.clippy]
all = { level = "warn", priority = 4 }
# cargo = { level = "warn", priority = 5 }
pedantic = { level = "warn", priority = 4 }
nursery = { level = "warn", priority = 4 }
# restriction = { level = "warn", priority = 5 }
unwrap_used = { level = "forbid", priority = 5 }
empty_structs_with_brackets = { level = "allow", priority = 5 }
pub_use = { level = "allow", priority = 5 }
missing_errors_doc = { level = "allow", priority = 5 }
multiple_crate_versions = { level = "allow", priority = 5 }
must_use_candidate = { level = "allow", priority = 5 }
needless_pass_by_value = { level = "allow", priority = 5 }
module_name_repetitions = { level = "allow", priority = 5 }
future_not_send = { level = "allow", priority = 5 }
redundant_closure_for_method_calls = { level = "allow", priority = 5 }
unused_async = { level = "allow", priority = 5 }                       # Only here until IndexedDB refactor
# unused = { level = "allow", priority = 5 }

#================================================================================
# Release Profile Optimization and Dev
#================================================================================
[profile.release]
opt-level = 3 # Maximum optimizations for speed
lto = true    # Enable Link Time Optimization
strip = true  # Remove debug symbols for smaller binary

[profile.dev]
opt-level = 0
codegen-units = 256
lto = "off"
incremental = true
debug = false       # Enable if debugging is necessary.

[dependencies]
# Async Messaging
async-channel = "2.5.0" # Lightweight async channel for inter-thread communication

# Time, Date, and Config
chrono = { version = "0.4.41", default-features = false, features = [
	"serde",
] } # Date/time manipulation
time = { version = "0.3.41", features = [
	"formatting",
	"serde",
	"parsing",
	"wasm-bindgen",
	"serde-human-readable",
] } # Alternative modern time lib
confy = "1.0.0" # Persistent app config management
directories = "6.0.0" # Platform-aware config/cache/data paths

# GUI Framework & Theming
iced = { version = "0.13.1", features = [
	"tokio",
	"debug",
	"svg",
	"advanced",
	"lazy",
	"image",
	"canvas",
	"wgpu",
] } # Native GUI framework
palette = "0.7.6" # Color palette library (for dynamic themes)

# Charts and Data Visualization
plotters = { version = "0.3.7", default-features = false, features = [
	"area_series",
	"line_series",
	"histogram",
] } # Plotting backend
plotters-iced = "0.11.0" # Integration of plotters into Iced GUI
plotters-backend = "0.3.7"

# Email & Document Intake
# imap = "2.4.1"                             # For reading emails (IMAP inbox integration)
lettre = "0.11.18"    # For sending emails (SMTP)
native-tls = "0.2.14" # TLS support for IMAP/SMTP (via native libraries)
# imap-proto = "0.16.5"

# Audio (System sounds or TTS)
rodio = { version = "0.21.1", default-features = false, features = [
	"mp3",
	"playback",
] } # Audio playback

# Serialization / Deserialization
serde = { version = "1.0.219", default-features = false, features = [
	"derive",
] } # Core serialization
serde_json = "1.0.141" # JSON parser/encoder for configs or local data

# Unique Identifiers & Encoding
uuid = { version = "1.17.0", features = [
	"v4",
	"fast-rng",
	"v7",
] } # Generate UUIDs for records
base64 = "0.22.1" # Encode/decode Base64 (for tokens, IDs)
data-encoding = "2.9.0"
base58 = "0.2.0"

# Visual Transitions / Interpolation
splines = "5.0.0" # Smooth animations, easing, graph lines

# Regex Utilities
lazy-regex = "3.4.1" # Fast compile-once regex for validations

# Other
anyhow = "1.0.100"
thiserror = "2.0.12"
clap = { version = "4.5.42", features = ["derive"] }
toml = "0.9.5"
mockd = { version = "0.4.51", features = ["name", "words", "unique"] }
iced_table = "0.13.0"
maxminddb = "0.26.0"
tokio = { version = "1.48.0", features = ["full"] }
hmac = "0.12.1"
sha2 = "0.10.9"
blake3 = "1.8.2"
argon2 = { version = "0.5.3", features = ["std"] }
derive_more = { version = "2.0.1", features = ["from", "display"] }
enum_dispatch = "0.3.13"
rand = "0.9.2"
sqlx = { version = "0.8.6", features = [
	"macros",
	"runtime-tokio",
	"postgres",
	"uuid",
] }
sea-query = "0.32.7"
sea-query-binder = { version = "0.7.0", features = [
	"sqlx-postgres",
	"with-uuid",
	"with-time",
] }
modql = { version = "0.4.1", features = ["with-sea-query"] }
tracing = "0.1.41"
tracing-subscriber = { version = "0.3.20", features = ["env-filter"] }
serde_with = { version = "3.15.0", features = ["time_0_3"] }
iced_aw = { version = "0.12.2", features = ["menu", "date_picker"] }
duckdb = { version = "1.4.1", features = ["bundled"] }

#================================================================================

[target.'cfg(windows)'.dependencies]
gag = "1.0.0"

#================================================================================

[target.'cfg(not(target_arch = "powerpc64"))'.dependencies]
reqwest = { version = "0.12.24", default-features = false, features = [
	"json",
	"rustls-tls",
] }

#================================================================================

[target.'cfg(target_arch = "powerpc64")'.dependencies]
reqwest = { version = "0.12.24", features = ["json"] }

#================================================================================

[dev-dependencies]
serde_test = "1.0.177"
rstest = "0.26.1"
serial_test = { version = "3.2.0", default-features = false }

#================================================================================

[build-dependencies]
phf_codegen = "0.13.1"
phf_shared = "0.13.1"
rustrict = { version = "0.7.36", default-features = false, features = [
	"censor",
] }

#================================================================================

[target.'cfg(windows)'.build-dependencies]
winres = "0.1.12"

# ============================================================
# üêß LINUX PACKAGING CONFIGURATIONS (.deb / .rpm / .AppImage)
# ============================================================

[package.metadata.deb]
name = "morphiq-lume"
maintainer = "Akaza Ruthven <ruthakaza@gmail.com>"
license-file = ["LICENSE", "0"]
section = "utils"
priority = "optional"
depends = "$auto"
assets = [
	[
		"target/release/morphiq-lume",
		"usr/bin/",
		"755",
	],
	[
		"assets/packaging/linux/morphiq-lume.desktop",
		"usr/share/applications/",
		"644",
	],
	[
		"assets/logos/icons/full/icon.png",
		"usr/share/icons/hicolor/256x256/apps/",
		"644",
	],
]
suggests = ["libgl1-mesa-glx", "libsdl2-2.0-0 (>= 2.0.5)"]
conflicts = ["morphiq-lume-beta"]

[package.metadata.rpm]
name = "morphiq-lume"
maintainer = "Akaza Ruthven <ruthakaza@gmail.com>"
license = "MIT"
summary = "Cross-platform HR management suite built in Rust with Iced"
group = "Applications/Productivity"
assets = [
	[
		"target/release/morphiq-lume",
		"/usr/bin/",
		"755",
	],
	[
		"assets/packaging/linux/morphiq-lume.desktop",
		"/usr/share/applications/",
		"644",
	],
	[
		"assets/logos/icons/full/icon.png",
		"/usr/share/icons/hicolor/256x256/apps/",
		"644",
	],
]

[package.metadata.appimage]
# Used by cargo-appimage
name = "Morphiq Lume"
icon = "assets/logos/icons/full/icon.png"
category = "Office"
exec = "morphiq-lume"
desktop = "assets/packaging/linux/morphiq-lume.desktop"
additional_files = ["assets/fonts/", "assets/logos/"]
license = "MIT"
arch = "x86_64"

# ============================================================
# ü™ü WINDOWS PACKAGING CONFIGURATION (.exe)
# ============================================================

[package.metadata.bundle.windows]
display_name = "Morphiq Lume"
identifier = "com.morphiq.lume"
icon = ["assets/logos/icons/full/icon.ico", "assets/logos/icons/raw/icon.ico"]
copyright = "¬© 2025 Morphiq Lume"
version = "1.0.0"
category = "Office"
description = """
Morphiq Lume brings clarity and precision to HR operations, built with Rust and Iced.
"""
# Optional: add resource embedding using winres
resources = ["assets/fonts/", "assets/logos/", "assets/configs/"]
shortcuts = true
start_menu = true
url_protocols = ["morphiqlume"]
installer = { type = "nsis" }                                     # or "innosetup"

# ============================================================
# üçé MACOS PACKAGING CONFIGURATION (.app)
# ============================================================

[package.metadata.bundle.osx]
name = "Morphiq Lume"
identifier = "com.morphiq.lume"
icon = ["assets/logos/icons/full/icon.icns"]
version = "1.0.0"
category = "public.app-category.productivity"
resources = ["assets/"]
osx_url_schemes = ["com.morphiq.lume"]
osx_frameworks = ["SDL2"]
copyright = "¬© 2025 Morphiq Lume"
short_description = "Modern HR management software built in Rust"
long_description = """
Morphiq Lume is a secure, fast, and modern desktop HR system built using Rust and the Iced GUI framework.
It manages employees, payroll, attendance, and analytics in a clean, elegant UI.
"""

# ============================================================
# üßä UNIVERSAL BUNDLE METADATA (used by cargo-bundle for all)
# ============================================================

[package.metadata.bundle]
name = "Morphiq Lume"
identifier = "com.morphiq.lume"
icon = ["assets/logos/icons/full/icon.png"]
version = "1.0.0"
category = "Office"
resources = ["assets/**/*"]
copyright = "¬© 2025 Morphiq Lume"
short_description = "Cross-platform HRM desktop app"
long_description = "Morphiq Lume: Transforming Human Resource Operations with Clarity, Precision, and Intelligence."

#================================================================================

[badges]
maintenance = { status = "actively-developed" }
